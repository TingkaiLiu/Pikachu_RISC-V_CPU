2020.11.9
    Think carefully about IF
        only load pc when pipeline moves
        need to know whether br_en is useful (whether it is a BR inst)
            handle in control instead, since JAL and JALR won't have that 
    Clock gating is feasible when stage is not needed 
    Pass control signals from control or buffer?
        Let use control to pass, although there is a copy in buffer
        in this way the skipping would be easier
    Problem solved: The ID also need two cycles
        although it will be covered by IF and MEM
        but it don't have a way to indicate it is done 
        Not the case! Regfile output uses combinational logics
    use_old in buffer mux since not necessary
        since it won't affect other original value if new but invalid data loaded
    cp2 design Tuesday night

2020.11.10
    When push to github, \n will be replaced by \r\n, 
        which will cost bin to fail
    Next time:
        See why infinite loop happens by running for a short time
        Check whether the connection is correct

2020.11.11
    Memory works well now: can get correct instruction
    NOP is encoded as ADDi x0, x0, 0
    Bug1:
        PC didn't change at branch
        Reason: forgot to set ALU for EX when BR
    Bug2:
        Invalid data read from D memory
        Forgot to mask the low 2 bits for mem_addr
        I-cache access is always 4 byte align so no need for that
    
    Bug3:
        When EX indicates halt, the WB for previous inst may not finish
        The way for detecting halt may need to change

2020.11.19
    For one-cycle hit cache, set the inst_mem_read to be always 1

2020.11.20
    To do: 
        add field for next PC and assign in IF. Check it at EX
            correct_pc_prediction won't cause problem at code start 
                since it has default value to be 1
        add "valid" field
            set in in EX
        add calculation for data hazard mux
            Need forward input: 
                only ID: if the data to read is currently at WB/EX/MEM
                when the data is ready and move the pipeline is handled by control
    Bug1:
        When the inst at mem is invalid, forgot to change the condition for done
            and load_buffer is never asserted
        Note: also need to change if brach prediction is added!
    Bug2:
        When write to x0, should write 0 anyway
    Bug3:
        For the forward input at MEM, the result is still possible to come from EX
            dr
            xx
            sr
        